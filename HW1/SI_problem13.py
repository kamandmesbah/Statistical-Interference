# -*- coding: utf-8 -*-
"""SI_p13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qy0DWWtqf_f8eGQ5dzBaLuttWvGX01PT
"""

import random
import matplotlib.pyplot as plt

def gamble(initial_stake, target_amount, bet_amount, win_probability, max_rounds):
    stake = initial_stake
    rounds = 0
    stake_history = [stake]

    while stake > 0 and stake < target_amount and rounds < max_rounds:
        rounds += 1
        if random.random() < win_probability:
            stake += bet_amount
        else:
            stake -= bet_amount
        stake_history.append(stake)

    if stake >= target_amount:
        print(f"Congratulations! You reached the target amount of {target_amount} in {rounds} rounds.")
    elif stake == 0:
        print(f"Oops! You went broke after {rounds} rounds.")
    else:
        print(f"Simulation ended after {rounds} rounds without reaching the target amount.")

    return stake_history


def simulate_gambling(initial_stake, target_amount, bet_amount, win_probability, max_rounds, num_simulations):
    success_probabilities = []

    for _ in range(num_simulations):
        stake = initial_stake
        rounds = 0

        while stake > 0 and stake < target_amount and rounds < max_rounds:
            rounds += 1
            if random.random() < win_probability:
                stake += bet_amount
            else:
                stake -= bet_amount

        if stake >= target_amount:
            success_probabilities.append(1)
        else:
            success_probabilities.append(0)

    mean_probability = sum(success_probabilities) / num_simulations

    return mean_probability




if __name__ == "__main__":
    initial_stake = int(input("Enter your initial stake: "))
    target_amount = int(input("Enter the target amount: "))
    bet_amount = int(input("Enter the bet amount: "))
    win_probability = float(input("Enter the win probability (e.g., 0.5 for a fair coin toss): "))
    max_rounds = 1000  # You can change this number as needed
    num_iterations = [1000, 2000,3000, 5000 ,8000, 10000  ]  # Number of simulations to run for each iteration
    mean_probabilities = []
    num_simulations = 1000

    mean_success_probabilities = []
    success_probability = simulate_gambling(initial_stake, target_amount, bet_amount, win_probability, max_rounds, num_simulations)
    stake_history = gamble(initial_stake, target_amount, bet_amount, win_probability, max_rounds)




    # Display the line graph of the stake history
    plt.plot(stake_history)
    plt.xlabel("Rounds")
    plt.ylabel("Stake")
    plt.title("Gambler's Stake Over Time")
    plt.grid(True)
    plt.show()


    for num_simulations in num_iterations:
      mean_probability = simulate_gambling(initial_stake, target_amount, bet_amount, win_probability, max_rounds, num_simulations)
      mean_probabilities.append(mean_probability)

      print(f"Probability of reaching the target amount before going broke ({num_simulations} iterations): {mean_probability:.2%}")
    # Visualize mean probabilities
    plt.plot(num_iterations, mean_probabilities, marker='o')
    plt.xlabel("Number of Iterations")
    plt.ylabel("Mean Probability")
    plt.title("Mean Probability of Reaching Target Amount Before Going Broke")
    plt.grid(True)
    plt.show()