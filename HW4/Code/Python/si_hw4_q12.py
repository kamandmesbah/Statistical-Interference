# -*- coding: utf-8 -*-
"""SI_HW4_Q12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p8NwsFtz41HdGffOV7anfUVBtAOlDjp_
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

# Load the dataset
file_path = '/content/prostate_analysis_results (2).csv'
data = pd.read_csv(file_path, index_col=0)

X = data[['lcavol']].values
y = data['lpsa'].values
# Display the first few rows of the dataset to understand its structure
data.head()

from sklearn.linear_model import LinearRegression
import numpy as np

# Linear Regression
model = LinearRegression()
model.fit(X, y)

# Coefficients
intercept = model.intercept_
slope = model.coef_[0]

# Predictions
y_pred = model.predict(X)

# Residuals
residuals = y - y_pred

# Empirical Variance of the estimator
var_empirical = np.var(residuals, ddof=2)

(intercept, slope, var_empirical)

# Add a column of ones to X for the intercept
X_design = np.hstack([np.ones((X.shape[0], 1)), X])

# Fisher Information Matrix
Fisher_Information_Matrix = np.linalg.inv(X_design.T @ X_design / var_empirical)

# Cramer-Rao Lower Bound (CRLB) is the diagonal of the inverse Fisher Information Matrix
CRLB = np.diag(Fisher_Information_Matrix)

CRLB

# Variance of the estimators from the residual variance
variance_estimators = var_empirical * np.diag(np.linalg.pinv(X_design.T @ X_design))

(variance_estimators, variance_estimators >= CRLB)

